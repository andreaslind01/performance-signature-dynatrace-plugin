/*
 * Copyright (c) 2014-2018 T-Systems Multimedia Solutions GmbH
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace REST API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/section-api) to read about use-cases and examples.
 *
 * OpenAPI spec version: 1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package de.tsystems.mms.apm.performancesignature.dynatracesaas.rest.env1.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;

import static de.tsystems.mms.apm.performancesignature.ui.util.PerfSigUIUtils.toIndentedString;

/**
 * Representation of a metric configuration with all its parameters.
 */
@ApiModel(description = "Representation of a metric configuration with all its parameters.")

public class TimeseriesDefinition {
    @SerializedName("displayName")
    private String displayName;
    @SerializedName("dimensions")
    private List<String> dimensions;
    @SerializedName("unit")
    private UnitEnum unit;
    @SerializedName("detailedSource")
    private String detailedSource;
    @SerializedName("pluginId")
    private String pluginId;
    @SerializedName("types")
    private List<String> types;
    @SerializedName("aggregationTypes")
    private List<AggregationTypeEnum> aggregationTypes;
    @SerializedName("filter")
    private FilterEnum filter;
    @SerializedName("timeseriesId")
    private String timeseriesId;

    public TimeseriesDefinition displayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * The name of the metric in the user interface.
     *
     * @return displayName
     **/
    @ApiModelProperty(value = "The name of the metric in the user interface.")
    public String getDisplayName() {
        return displayName;
    }

    public void setDisplayName(String displayName) {
        this.displayName = displayName;
    }

    public TimeseriesDefinition dimensions(List<String> dimensions) {
        this.dimensions = dimensions;
        return this;
    }

    public TimeseriesDefinition addDimensionsItem(String dimensionsItem) {
        if (this.dimensions == null) {
            this.dimensions = new ArrayList<>();
        }
        this.dimensions.add(dimensionsItem);
        return this;
    }

    /**
     * Fine metric division, for example process group and process ID for some process-related metric.
     *
     * @return dimensions
     **/
    @ApiModelProperty(value = "Fine metric division, for example process group and process ID for some process-related metric.")
    public List<String> getDimensions() {
        return dimensions;
    }

    public void setDimensions(List<String> dimensions) {
        this.dimensions = dimensions;
    }

    public TimeseriesDefinition unit(UnitEnum unit) {
        this.unit = unit;
        return this;
    }

    /**
     * Units of the metric.
     *
     * @return unit
     **/
    @ApiModelProperty(value = "Units of the metric.")
    public UnitEnum getUnit() {
        return unit;
    }

    public void setUnit(UnitEnum unit) {
        this.unit = unit;
    }

    public TimeseriesDefinition detailedSource(String detailedSource) {
        this.detailedSource = detailedSource;
        return this;
    }

    /**
     * The feature, where the metric originates.
     *
     * @return detailedSource
     **/
    @ApiModelProperty(value = "The feature, where the metric originates.")
    public String getDetailedSource() {
        return detailedSource;
    }

    public void setDetailedSource(String detailedSource) {
        this.detailedSource = detailedSource;
    }

    public TimeseriesDefinition pluginId(String pluginId) {
        this.pluginId = pluginId;
        return this;
    }

    /**
     * The ID of the plugin, where the metric originates.
     *
     * @return pluginId
     **/
    @ApiModelProperty(value = "The ID of the plugin, where the metric originates.")
    public String getPluginId() {
        return pluginId;
    }

    public void setPluginId(String pluginId) {
        this.pluginId = pluginId;
    }

    public TimeseriesDefinition types(List<String> types) {
        this.types = types;
        return this;
    }

    public TimeseriesDefinition addTypesItem(String typesItem) {
        if (this.types == null) {
            this.types = new ArrayList<>();
        }
        this.types.add(typesItem);
        return this;
    }

    /**
     * Technology type definition. Used to group metrics under a logical technology name.
     *
     * @return types
     **/
    @ApiModelProperty(value = "Technology type definition. Used to group metrics under a logical technology name.")
    public List<String> getTypes() {
        return types;
    }

    public void setTypes(List<String> types) {
        this.types = types;
    }

    public TimeseriesDefinition aggregationTypes(List<AggregationTypeEnum> aggregationTypes) {
        this.aggregationTypes = aggregationTypes;
        return this;
    }

    public TimeseriesDefinition addAggregationTypesItem(AggregationTypeEnum aggregationTypesItem) {
        if (this.aggregationTypes == null) {
            this.aggregationTypes = new ArrayList<>();
        }
        this.aggregationTypes.add(aggregationTypesItem);
        return this;
    }

    /**
     * The list of allowed aggregations for this metric.
     *
     * @return aggregationTypes
     **/
    @ApiModelProperty(value = "The list of allowed aggregations for this metric.")
    public List<AggregationTypeEnum> getAggregationTypes() {
        return aggregationTypes;
    }

    public void setAggregationTypes(List<AggregationTypeEnum> aggregationTypes) {
        this.aggregationTypes = aggregationTypes;
    }

    public TimeseriesDefinition filter(FilterEnum filter) {
        this.filter = filter;
        return this;
    }

    /**
     * The feature, where the metric originates.
     *
     * @return filter
     **/
    @ApiModelProperty(value = "The feature, where the metric originates.")
    public FilterEnum getFilter() {
        return filter;
    }

    public void setFilter(FilterEnum filter) {
        this.filter = filter;
    }

    public TimeseriesDefinition timeseriesId(String timeseriesId) {
        this.timeseriesId = timeseriesId;
        return this;
    }

    /**
     * The ID of the metric.
     *
     * @return timeseriesId
     **/
    @ApiModelProperty(value = "The ID of the metric.")
    public String getTimeseriesId() {
        return timeseriesId;
    }

    public void setTimeseriesId(String timeseriesId) {
        this.timeseriesId = timeseriesId;
    }

    @Override
    public String toString() {
        return "class TimeseriesDefinition {\n" +
                "    displayName: " + toIndentedString(displayName) + "\n" +
                "    dimensions: " + toIndentedString(dimensions) + "\n" +
                "    unit: " + toIndentedString(unit) + "\n" +
                "    detailedSource: " + toIndentedString(detailedSource) + "\n" +
                "    pluginId: " + toIndentedString(pluginId) + "\n" +
                "    types: " + toIndentedString(types) + "\n" +
                "    aggregationTypes: " + toIndentedString(aggregationTypes) + "\n" +
                "    filter: " + toIndentedString(filter) + "\n" +
                "    timeseriesId: " + toIndentedString(timeseriesId) + "\n" +
                "}";
    }
}

