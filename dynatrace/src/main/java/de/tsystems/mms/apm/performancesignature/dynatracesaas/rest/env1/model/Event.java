/*
 * Copyright (c) 2014-2018 T-Systems Multimedia Solutions GmbH
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace REST API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/section-api) to read about use-cases and examples.
 *
 * OpenAPI spec version: 1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package de.tsystems.mms.apm.performancesignature.dynatracesaas.rest.env1.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import java.util.Map;

import static de.tsystems.mms.apm.performancesignature.ui.util.PerfSigUIUtils.toIndentedString;

/**
 * The properties of an event.
 */
@ApiModel(description = "The properties of an event.")

public class Event {
    @SerializedName("startTime")
    private Long startTime;

    @SerializedName("endTime")
    private Long endTime;

    @SerializedName("entityId")
    private String entityId;

    @SerializedName("entityName")
    private String entityName;
    @SerializedName("severityLevel")
    private SeverityLevelEnum severityLevel;
    @SerializedName("impactLevel")
    private ImpactLevelEnum impactLevel;
    @SerializedName("eventType")
    private EventTypeEnum eventType;
    @SerializedName("status")
    private StatusEnum status;
    @SerializedName("severities")
    private List<EventSeverity> severities;
    @SerializedName("isRootCause")
    private Boolean isRootCause;
    @SerializedName("deploymentProject")
    private String deploymentProject;
    @SerializedName("cpuLimitInMHz")
    private Integer cpuLimitInMHz;
    @SerializedName("deploymentParamAdded")
    private String deploymentParamAdded;
    @SerializedName("isClusterWide")
    private Boolean isClusterWide;
    @SerializedName("source")
    private String source;
    @SerializedName("effectiveEntity")
    private String effectiveEntity;
    @SerializedName("operatingSystem")
    private String operatingSystem;
    @SerializedName("artifact")
    private String artifact;
    @SerializedName("cpuLoad")
    private Float cpuLoad;
    @SerializedName("affectedRequestsPerMinute")
    private Float affectedRequestsPerMinute;
    @SerializedName("annotationDescription")
    private String annotationDescription;
    @SerializedName("browser")
    private BrowserEnum browser;
    @SerializedName("affectedSyntheticLocations")
    private List<String> affectedSyntheticLocations;
    @SerializedName("deploymentName")
    private String deploymentName;
    @SerializedName("deploymentParamRemoved")
    private String deploymentParamRemoved;
    @SerializedName("userDefined50thPercentileThreshold")
    private Float userDefined50thPercentileThreshold;
    @SerializedName("serviceMethodGroup")
    private String serviceMethodGroup;
    @SerializedName("referenceResponseTime90thPercentile")
    private Float referenceResponseTime90thPercentile;
    @SerializedName("userAction")
    private String userAction;
    @SerializedName("minimumProcessGroupInstanceCountThreshold")
    private Integer minimumProcessGroupInstanceCountThreshold;
    @SerializedName("referenceResponseTime50thPercentile")
    private Float referenceResponseTime50thPercentile;
    @SerializedName("userDefined90thPercentileThreshold")
    private Float userDefined90thPercentileThreshold;
    @SerializedName("deploymentVersion")
    private String deploymentVersion;
    @SerializedName("annotationType")
    private String annotationType;
    @SerializedName("affectedSyntheticActions")
    private List<String> affectedSyntheticActions;
    @SerializedName("affectedUserActionsPerMinute")
    private Float affectedUserActionsPerMinute;
    @SerializedName("activeMaintenanceWindows")
    private List<String> activeMaintenanceWindows;
    @SerializedName("mobileAppVersion")
    private String mobileAppVersion;
    @SerializedName("userDefinedFailureRateThreshold")
    private Float userDefinedFailureRateThreshold;
    @SerializedName("percentile")
    private PercentileEnum percentile;
    @SerializedName("customProperties")
    private Map<String, String> customProperties;
    @SerializedName("remediationAction")
    private String remediationAction;
    @SerializedName("service")
    private String service;
    @SerializedName("ciBackLink")
    private String ciBackLink;
    @SerializedName("geolocation")
    private String geolocation;
    @SerializedName("serviceMethod")
    private String serviceMethod;

    /**
     * Timestamp of the event detection, in UTC milliseconds.
     *
     * @return startTime
     **/
    @ApiModelProperty(value = "Timestamp of the event detection, in UTC milliseconds.")
    public Long getStartTime() {
        return startTime;
    }

    /**
     * Timestamp of the event closure, in UTC milliseconds.  &#x60;-1&#x60; if the event is still open.
     *
     * @return endTime
     **/
    @ApiModelProperty(value = "Timestamp of the event closure, in UTC milliseconds.  `-1` if the event is still open.")
    public Long getEndTime() {
        return endTime;
    }

    /**
     * The ID of the affected Dynatrace entity.    You can find the ID in the URL of the corresponding Dynatrace entity page, for example, &#x60;HOST-007&#x60;.
     *
     * @return entityId
     **/
    @ApiModelProperty(value = "The ID of the affected Dynatrace entity.    You can find the ID in the URL of the corresponding Dynatrace entity page, for example, `HOST-007`.")
    public String getEntityId() {
        return entityId;
    }

    /**
     * The name of the affected Dynatrace entity.
     *
     * @return entityName
     **/
    @ApiModelProperty(value = "The name of the affected Dynatrace entity.")
    public String getEntityName() {
        return entityName;
    }

    /**
     * The severity of the event.
     *
     * @return severityLevel
     **/
    @ApiModelProperty(value = "The severity of the event.")
    public SeverityLevelEnum getSeverityLevel() {
        return severityLevel;
    }

    /**
     * The impact level of the event.
     *
     * @return impactLevel
     **/
    @ApiModelProperty(value = "The impact level of the event.")
    public ImpactLevelEnum getImpactLevel() {
        return impactLevel;
    }

    /**
     * The type of the event.
     *
     * @return eventType
     **/
    @ApiModelProperty(value = "The type of the event.")
    public EventTypeEnum getEventType() {
        return eventType;
    }

    /**
     * The status of the event.
     *
     * @return status
     **/
    @ApiModelProperty(value = "The status of the event.")
    public StatusEnum getStatus() {
        return status;
    }

    /**
     * Additional data on the event severity.
     *
     * @return severities
     **/
    @ApiModelProperty(value = "Additional data on the event severity.")
    public List<EventSeverity> getSeverities() {
        return severities;
    }

    /**
     * Whether the event is the root cause of the problem.
     *
     * @return isRootCause
     **/
    @ApiModelProperty(value = "Whether the event is the root cause of the problem.")
    public Boolean isIsRootCause() {
        return isRootCause;
    }

    /**
     * @return deploymentProject
     **/
    @ApiModelProperty()
    public String getDeploymentProject() {
        return deploymentProject;
    }

    /**
     * @return cpuLimitInMHz
     **/
    @ApiModelProperty()
    public Integer getCpuLimitInMHz() {
        return cpuLimitInMHz;
    }

    /**
     * @return deploymentParamAdded
     **/
    @ApiModelProperty()
    public String getDeploymentParamAdded() {
        return deploymentParamAdded;
    }

    /**
     * For events with the event type &#39;MONITORING_UNAVAILABLE&#39; it may occur that the event is occurring on the entire Dynatrace cluster. If this is true it could be that there are problems on Dynatrace&#39; side.
     *
     * @return isClusterWide
     **/
    @ApiModelProperty(value = "For events with the event type 'MONITORING_UNAVAILABLE' it may occur that the event is occurring on the entire Dynatrace cluster. If this is true it could be that there are problems on Dynatrace' side.")
    public Boolean isIsClusterWide() {
        return isClusterWide;
    }

    /**
     * @return source
     **/
    @ApiModelProperty()
    public String getSource() {
        return source;
    }

    /**
     * @return effectiveEntity
     **/
    @ApiModelProperty()
    public String getEffectiveEntity() {
        return effectiveEntity;
    }

    /**
     * @return operatingSystem
     **/
    @ApiModelProperty()
    public String getOperatingSystem() {
        return operatingSystem;
    }

    /**
     * @return artifact
     **/
    @ApiModelProperty()
    public String getArtifact() {
        return artifact;
    }

    /**
     * @return cpuLoad
     **/
    @ApiModelProperty()
    public Float getCpuLoad() {
        return cpuLoad;
    }

    /**
     * @return affectedRequestsPerMinute
     **/
    @ApiModelProperty()
    public Float getAffectedRequestsPerMinute() {
        return affectedRequestsPerMinute;
    }

    /**
     * @return annotationDescription
     **/
    @ApiModelProperty()
    public String getAnnotationDescription() {
        return annotationDescription;
    }

    /**
     * @return browser
     **/
    @ApiModelProperty()
    public BrowserEnum getBrowser() {
        return browser;
    }

    /**
     * @return affectedSyntheticLocations
     **/
    @ApiModelProperty()
    public List<String> getAffectedSyntheticLocations() {
        return affectedSyntheticLocations;
    }

    /**
     * @return deploymentName
     **/
    @ApiModelProperty()
    public String getDeploymentName() {
        return deploymentName;
    }

    /**
     * @return deploymentParamRemoved
     **/
    @ApiModelProperty()
    public String getDeploymentParamRemoved() {
        return deploymentParamRemoved;
    }

    /**
     * @return userDefined50thPercentileThreshold
     **/
    @ApiModelProperty()
    public Float getUserDefined50thPercentileThreshold() {
        return userDefined50thPercentileThreshold;
    }

    /**
     * @return serviceMethodGroup
     **/
    @ApiModelProperty()
    public String getServiceMethodGroup() {
        return serviceMethodGroup;
    }

    /**
     * @return referenceResponseTime90thPercentile
     **/
    @ApiModelProperty()
    public Float getReferenceResponseTime90thPercentile() {
        return referenceResponseTime90thPercentile;
    }

    /**
     * @return userAction
     **/
    @ApiModelProperty()
    public String getUserAction() {
        return userAction;
    }

    /**
     * @return minimumProcessGroupInstanceCountThreshold
     **/
    @ApiModelProperty()
    public Integer getMinimumProcessGroupInstanceCountThreshold() {
        return minimumProcessGroupInstanceCountThreshold;
    }

    /**
     * @return referenceResponseTime50thPercentile
     **/
    @ApiModelProperty()
    public Float getReferenceResponseTime50thPercentile() {
        return referenceResponseTime50thPercentile;
    }

    /**
     * @return userDefined90thPercentileThreshold
     **/
    @ApiModelProperty()
    public Float getUserDefined90thPercentileThreshold() {
        return userDefined90thPercentileThreshold;
    }

    /**
     * @return deploymentVersion
     **/
    @ApiModelProperty()
    public String getDeploymentVersion() {
        return deploymentVersion;
    }

    /**
     * @return annotationType
     **/
    @ApiModelProperty()
    public String getAnnotationType() {
        return annotationType;
    }

    /**
     * If the event type is one of the synthetic event types then we may have information which synthetic actions are affected by the event. The names of those are returned in this field.
     *
     * @return affectedSyntheticActions
     **/
    @ApiModelProperty(value = "If the event type is one of the synthetic event types then we may have information which synthetic actions are affected by the event. The names of those are returned in this field.")
    public List<String> getAffectedSyntheticActions() {
        return affectedSyntheticActions;
    }

    /**
     * @return affectedUserActionsPerMinute
     **/
    @ApiModelProperty()
    public Float getAffectedUserActionsPerMinute() {
        return affectedUserActionsPerMinute;
    }

    /**
     * @return activeMaintenanceWindows
     **/
    @ApiModelProperty()
    public List<String> getActiveMaintenanceWindows() {
        return activeMaintenanceWindows;
    }

    /**
     * @return mobileAppVersion
     **/
    @ApiModelProperty()
    public String getMobileAppVersion() {
        return mobileAppVersion;
    }

    /**
     * @return userDefinedFailureRateThreshold
     **/
    @ApiModelProperty()
    public Float getUserDefinedFailureRateThreshold() {
        return userDefinedFailureRateThreshold;
    }

    /**
     * @return percentile
     **/
    @ApiModelProperty()
    public PercentileEnum getPercentile() {
        return percentile;
    }

    /**
     * @return customProperties
     **/
    @ApiModelProperty()
    public Map<String, String> getCustomProperties() {
        return customProperties;
    }

    /**
     * @return remediationAction
     **/
    @ApiModelProperty()
    public String getRemediationAction() {
        return remediationAction;
    }

    /**
     * @return service
     **/
    @ApiModelProperty()
    public String getService() {
        return service;
    }

    /**
     * @return ciBackLink
     **/
    @ApiModelProperty()
    public String getCiBackLink() {
        return ciBackLink;
    }

    /**
     * @return geolocation
     **/
    @ApiModelProperty()
    public String getGeolocation() {
        return geolocation;
    }

    /**
     * @return serviceMethod
     **/
    @ApiModelProperty()
    public String getServiceMethod() {
        return serviceMethod;
    }

    @Override
    public String toString() {
        return "class Event {\n" +
                "    startTime: " + toIndentedString(startTime) + "\n" +
                "    endTime: " + toIndentedString(endTime) + "\n" +
                "    entityId: " + toIndentedString(entityId) + "\n" +
                "    entityName: " + toIndentedString(entityName) + "\n" +
                "    severityLevel: " + toIndentedString(severityLevel) + "\n" +
                "    impactLevel: " + toIndentedString(impactLevel) + "\n" +
                "    eventType: " + toIndentedString(eventType) + "\n" +
                "    status: " + toIndentedString(status) + "\n" +
                "    severities: " + toIndentedString(severities) + "\n" +
                "    isRootCause: " + toIndentedString(isRootCause) + "\n" +
                "    deploymentProject: " + toIndentedString(deploymentProject) + "\n" +
                "    cpuLimitInMHz: " + toIndentedString(cpuLimitInMHz) + "\n" +
                "    deploymentParamAdded: " + toIndentedString(deploymentParamAdded) + "\n" +
                "    isClusterWide: " + toIndentedString(isClusterWide) + "\n" +
                "    source: " + toIndentedString(source) + "\n" +
                "    effectiveEntity: " + toIndentedString(effectiveEntity) + "\n" +
                "    operatingSystem: " + toIndentedString(operatingSystem) + "\n" +
                "    artifact: " + toIndentedString(artifact) + "\n" +
                "    cpuLoad: " + toIndentedString(cpuLoad) + "\n" +
                "    affectedRequestsPerMinute: " + toIndentedString(affectedRequestsPerMinute) + "\n" +
                "    annotationDescription: " + toIndentedString(annotationDescription) + "\n" +
                "    browser: " + toIndentedString(browser) + "\n" +
                "    affectedSyntheticLocations: " + toIndentedString(affectedSyntheticLocations) + "\n" +
                "    deploymentName: " + toIndentedString(deploymentName) + "\n" +
                "    deploymentParamRemoved: " + toIndentedString(deploymentParamRemoved) + "\n" +
                "    userDefined50thPercentileThreshold: " + toIndentedString(userDefined50thPercentileThreshold) + "\n" +
                "    serviceMethodGroup: " + toIndentedString(serviceMethodGroup) + "\n" +
                "    referenceResponseTime90thPercentile: " + toIndentedString(referenceResponseTime90thPercentile) + "\n" +
                "    userAction: " + toIndentedString(userAction) + "\n" +
                "    minimumProcessGroupInstanceCountThreshold: " + toIndentedString(minimumProcessGroupInstanceCountThreshold) + "\n" +
                "    referenceResponseTime50thPercentile: " + toIndentedString(referenceResponseTime50thPercentile) + "\n" +
                "    userDefined90thPercentileThreshold: " + toIndentedString(userDefined90thPercentileThreshold) + "\n" +
                "    deploymentVersion: " + toIndentedString(deploymentVersion) + "\n" +
                "    annotationType: " + toIndentedString(annotationType) + "\n" +
                "    affectedSyntheticActions: " + toIndentedString(affectedSyntheticActions) + "\n" +
                "    affectedUserActionsPerMinute: " + toIndentedString(affectedUserActionsPerMinute) + "\n" +
                "    activeMaintenanceWindows: " + toIndentedString(activeMaintenanceWindows) + "\n" +
                "    mobileAppVersion: " + toIndentedString(mobileAppVersion) + "\n" +
                "    userDefinedFailureRateThreshold: " + toIndentedString(userDefinedFailureRateThreshold) + "\n" +
                "    percentile: " + toIndentedString(percentile) + "\n" +
                "    customProperties: " + toIndentedString(customProperties) + "\n" +
                "    remediationAction: " + toIndentedString(remediationAction) + "\n" +
                "    service: " + toIndentedString(service) + "\n" +
                "    ciBackLink: " + toIndentedString(ciBackLink) + "\n" +
                "    geolocation: " + toIndentedString(geolocation) + "\n" +
                "    serviceMethod: " + toIndentedString(serviceMethod) + "\n" +
                "}";
    }

    /**
     *
     */
    @JsonAdapter(BrowserEnum.Adapter.class)
    public enum BrowserEnum {
        INFRASTRUCTURE("INFRASTRUCTURE"),
        SERVICES("SERVICES"),
        APPLICATION("APPLICATION"),
        ENVIRONMENT("ENVIRONMENT");

        private final String value;

        BrowserEnum(String value) {
            this.value = value;
        }

        public static BrowserEnum fromValue(String text) {
            return Arrays.stream(BrowserEnum.values()).filter(b -> b.value.equals(text)).findFirst().orElse(null);
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return value;
        }

        public static class Adapter extends TypeAdapter<BrowserEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final BrowserEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public BrowserEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return BrowserEnum.fromValue(value);
            }
        }
    }

    /**
     *
     */
    @JsonAdapter(PercentileEnum.Adapter.class)
    public enum PercentileEnum {
        _50TH("50th"),
        _90TH("90th");

        private final String value;

        PercentileEnum(String value) {
            this.value = value;
        }

        public static PercentileEnum fromValue(String text) {
            return Arrays.stream(PercentileEnum.values()).filter(b -> b.value.equals(text)).findFirst().orElse(null);
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return value;
        }

        public static class Adapter extends TypeAdapter<PercentileEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final PercentileEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public PercentileEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return PercentileEnum.fromValue(value);
            }
        }
    }
}

